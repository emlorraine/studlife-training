{"version":3,"sources":["components/Main.js","App.js","serviceWorker.js","index.js","components/assets/reportingText.md","components/assets/reportingActivity.md","components/assets/newsText.md","components/assets/newsActivity.md","components/assets/experienceText.md","components/assets/experienceActivity.md","components/assets/washUText.md","components/assets/washUActivity.md","components/assets/ethicsText.md","components/assets/welcomeText.md","components/assets/submissionText.md","components/assets/spj-code-of-ethics.png","components/fonts/Montserrat/Montserrat-Regular.ttf"],"names":["Main","props","refWelcome","React","createRef","refEthics","refWashU","refWritingReporting","refWritingExperience","refSubmit","handleScrollTo","elRef","current","scrollIntoView","behavior","block","state","reportingText","reportingActivityMarkdown","newsMarkdown","newsActivityMarkdown","experienceMarkdown","experienceActivityMarkdown","washUMarkdown","washUActivityMarkdown","ethicsMarkdown","welcomeMarkdown","submissionMarkdown","this","setState","loaded","fetch","reportingMarkdown","then","response","text","ethicsTextMarkdown","welcomeTexMarkdown","submissionTextMarkdown","isExpanded","console","log","className","onClick","ref","source","href","src","ethicsImage","class","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.f4a79c18.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Route, Switch} from \"react-router\";\nimport Scroll from 'react-scroll'\nimport { HashLink as Link } from 'react-router-hash-link';\nimport './fonts/Montserrat/Montserrat-Regular.ttf'\nimport ReadMoreReact from 'read-more-react';\n\nimport ReactMarkdown from 'react-markdown';\nimport reportingMarkdown from './assets/reportingText.md';\nimport reportingActivityMarkdown from './assets/reportingActivity.md';\nimport newsMarkdown from './assets/newsText.md';\nimport newsActivityMarkdown from './assets/newsActivity.md';\nimport experienceMarkdown from './assets/experienceText.md';\nimport experienceActivityMarkdown from './assets/experienceActivity.md';\nimport washUMarkdown from './assets/washUText.md';\nimport washUActivityMarkdown from './assets/washUActivity.md';\nimport ethicsTextMarkdown from './assets/ethicsText.md';\nimport welcomeTexMarkdown from './assets/welcomeText.md';\nimport submissionTextMarkdown from './assets/submissionText.md';\n\nimport ethicsImage from './assets/spj-code-of-ethics.png';\n\nimport './Main.css';\n\n\nclass Main extends Component {\n  constructor(props){\n    super(props)\n    this.state = { reportingText: null }\n    this.state = { reportingActivityMarkdown: null }\n    this.state = { newsMarkdown: null }\n    this.state = { newsActivityMarkdown: null }\n    this.state = { experienceMarkdown: null }\n    this.state = { experienceActivityMarkdown: null }\n    this.state = { washUMarkdown: null }\n    this.state = { washUActivityMarkdown: null }\n    this.state = { ethicsMarkdown: null }\n    this.state = { welcomeMarkdown: null }\n    this.state = { submissionMarkdown: null }\n\n  }\n  refWelcome = React.createRef()\n  refEthics = React.createRef()\n  refWashU = React.createRef()\n  refWritingReporting = React.createRef()\n  refWritingExperience = React.createRef()\n  refSubmit= React.createRef()\n  \n\n  componentDidMount() {\n    this.setState(\n      \n      { loaded: true })\n    \n    fetch(reportingMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ reportingText: text })\n    })\n    fetch(reportingActivityMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ reportingActivityMarkdown: text })\n    })\n    fetch(newsMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ newsMarkdown: text })\n    })\n    fetch(newsActivityMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ newsActivityMarkdown: text })\n    })\n    fetch(experienceMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ experienceMarkdown: text })\n    })\n    fetch(experienceActivityMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ experienceActivityMarkdown: text })\n    })\n    fetch(washUMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ washUMarkdown: text })\n    })\n    fetch(washUActivityMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ washUActivityMarkdown: text })\n    })\n    fetch(ethicsTextMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ ethicsMarkdown: text })\n    })\n\n    fetch(welcomeTexMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ welcomeMarkdown: text })\n    })\n    fetch(submissionTextMarkdown).then((response) => response.text()).then((text) => {\n      this.setState({ submissionMarkdown: text })\n    })\n  }\n  handleScrollTo = (elRef) => {\n    const el = elRef.current ? elRef.current : elRef\n    el.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    })\n  }\n\n  executeOnClick(isExpanded) {\n    console.log(isExpanded);\n}\n\n  render() {\n      return (\n        <article>\n        <nav>\n        <div className = \"sidebar-css\">\n          <ul>\n            <li onClick={() => { this.handleScrollTo(this.refWelcome) }} className = \"nav-header\">\n              Welcome\n            </li>\n            <li onClick={() => { this.handleScrollTo(this.refEthics) }} className = \"nav-header\">\n              Reporting and Ethics \n            </li>\n            <li onClick={() => { this.handleScrollTo(this.refWashU) }} className = \"nav-header\">\n              Washington University 101 \n            </li>            \n            <li onClick={() => { this.handleScrollTo(this.refWritingReporting) }} className = \"nav-header\">\n              Writing from Reporting \n            </li>\n            <li onClick={() => { this.handleScrollTo(this.refWritingExperience) }} className = \"nav-header\">\n              Writing from Experience \n            </li>\n            <li onClick={() => { this.handleScrollTo(this.refSubmit) }} className = \"nav-header\">\n              Submit  \n            </li>          \n            </ul>\n          </div>\n        </nav>\n        <div className = \"main-css\">\n        <div className=\"spacer\"></div>\n        <div ref={this.refWelcome}>\n          <h2 className = \"main-header\">Welcome to Student Life</h2>\n          <ReactMarkdown className = \"header-content\" source={this.state.welcomeMarkdown} />\n        </div>\n        <div className=\"spacer\"></div>\n        <div ref={this.refEthics}>\n          <h2 className = \"nav-content-header\">Reporting Basics</h2>\n          <ReactMarkdown className = \"nav-content\" source={this.state.reportingText} />\n          <ReactMarkdown className = \"nav-content\" source={this.state.ethicsMarkdown} />\n          <a href = \"spj.org/ethicscode.asp#:~:text=Ethical%20journalism%20should%20be%20accurate,the%20accuracy%20of%20their%20work.\"><img src={ethicsImage} class = \"img\"/> </a>\n          <ReactMarkdown className = \"nav-content\" source={this.state.reportingActivityMarkdown} />        \n          </div>\n        <div className=\"spacer\"></div>\n        <div ref={this.refWashU}>\n          <h2 className = \"nav-content-header\">Washington University 101</h2>\n          <ReactMarkdown className = \"nav-content\" source={this.state.washUMarkdown} />\n          <ReactMarkdown className = \"nav-content\" source={this.state.washUActivityMarkdown} />\n        </div>\n        <div className=\"spacer\"></div>\n        <div ref={this.refWritingReporting}>\n          <h2 className = \"nav-content-header\">Writing from Reporting</h2>\n          <ReactMarkdown className = \"nav-content\" source={this.state.newsMarkdown} />\n          <ReactMarkdown className = \"nav-content\" source={this.state.newsActivityMarkdown} />\n        </div>\n        <div ref={this.refWritingExperience}>\n          <h2 className = \"nav-content-header\">Writing from Experience</h2>\n          <ReactMarkdown className = \"nav-content\" source={this.state.experienceMarkdown} />\n          <ReactMarkdown className = \"nav-content\" source={this.state.experienceActivityMarkdown} />\n        </div>\n        <div ref={this.refSubmit}>\n          <h2 className = \"nav-content-header\">Submit</h2>\n          <ReactMarkdown className = \"nav-content\" source={this.state.submissionMarkdown} />\n        </div>\n        </div> \n      </article>  \n      )\n    }\n  }\nexport default Main; ","import React from 'react';\nimport Main from './components/Main.js'\n\nfunction App() {\n  return (\n    <div className=\"root\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/reportingText.4e95dd64.md\";","module.exports = __webpack_public_path__ + \"static/media/reportingActivity.4ee9e07b.md\";","module.exports = __webpack_public_path__ + \"static/media/newsText.67330a17.md\";","module.exports = __webpack_public_path__ + \"static/media/newsActivity.e8e3e46c.md\";","module.exports = __webpack_public_path__ + \"static/media/experienceText.3d8f9aaf.md\";","module.exports = __webpack_public_path__ + \"static/media/experienceActivity.316743f8.md\";","module.exports = __webpack_public_path__ + \"static/media/washUText.df4f0885.md\";","module.exports = __webpack_public_path__ + \"static/media/washUActivity.53b8e30f.md\";","module.exports = __webpack_public_path__ + \"static/media/ethicsText.cfc97994.md\";","module.exports = __webpack_public_path__ + \"static/media/welcomeText.916f0518.md\";","module.exports = __webpack_public_path__ + \"static/media/submissionText.f344986a.md\";","module.exports = __webpack_public_path__ + \"static/media/spj-code-of-ethics.b008ed06.png\";","module.exports = __webpack_public_path__ + \"static/media/Montserrat-Regular.ee653992.ttf\";"],"sourceRoot":""}